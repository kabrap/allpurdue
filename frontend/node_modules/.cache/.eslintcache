[{"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\index.js":"1","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\App.js":"2","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\AddLocation.js":"3","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\About.js":"4","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Home.js":"5","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\ForgotPassword.js":"6","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Blogs.js":"7","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Dashboard.js":"8","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\EditPlace.js":"9","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Contact.js":"10","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\LoginSignup.js":"11","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Place.js":"12","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\BlogCreationPage.js":"13","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\BlogPost.js":"14","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Study.js":"15","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Residence.js":"16","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Cafes.js":"17","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Categories.js":"18","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Restaurants.js":"19","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\navbar\\Navbar.js":"20","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\navbar\\LoggedInNavbar.js":"21","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\card\\Card.js":"22","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\ConfirmationDialog.js":"23","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\search\\Search.js":"24","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\card\\CategoryCard.js":"25","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\ConfirmationReport.js":"26","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\card\\BlogCard.js":"27","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\button\\Button.js":"28"},{"size":228,"mtime":1681854730856,"results":"29","hashOfConfig":"30"},{"size":3051,"mtime":1681854730817,"results":"31","hashOfConfig":"30"},{"size":16120,"mtime":1681854730859,"results":"32","hashOfConfig":"30"},{"size":2746,"mtime":1681855759527,"results":"33","hashOfConfig":"30"},{"size":8051,"mtime":1681854730869,"results":"34","hashOfConfig":"30"},{"size":1411,"mtime":1681854730867,"results":"35","hashOfConfig":"30"},{"size":7601,"mtime":1681854730863,"results":"36","hashOfConfig":"30"},{"size":22428,"mtime":1681902464075,"results":"37","hashOfConfig":"30"},{"size":16227,"mtime":1681854730867,"results":"38","hashOfConfig":"30"},{"size":4323,"mtime":1681854752342,"results":"39","hashOfConfig":"30"},{"size":4376,"mtime":1681902464076,"results":"40","hashOfConfig":"30"},{"size":26828,"mtime":1681903900464,"results":"41","hashOfConfig":"30"},{"size":5218,"mtime":1681854730860,"results":"42","hashOfConfig":"30"},{"size":10044,"mtime":1681905106552,"results":"43","hashOfConfig":"30"},{"size":2109,"mtime":1681854730876,"results":"44","hashOfConfig":"30"},{"size":2125,"mtime":1681854730875,"results":"45","hashOfConfig":"30"},{"size":2095,"mtime":1681854730873,"results":"46","hashOfConfig":"30"},{"size":9006,"mtime":1681904751814,"results":"47","hashOfConfig":"30"},{"size":2119,"mtime":1681854730876,"results":"48","hashOfConfig":"30"},{"size":767,"mtime":1681854730825,"results":"49","hashOfConfig":"30"},{"size":741,"mtime":1681854730824,"results":"50","hashOfConfig":"30"},{"size":1663,"mtime":1681854730822,"results":"51","hashOfConfig":"30"},{"size":1549,"mtime":1681854730818,"results":"52","hashOfConfig":"30"},{"size":1922,"mtime":1681854730827,"results":"53","hashOfConfig":"30"},{"size":1930,"mtime":1681854730823,"results":"54","hashOfConfig":"30"},{"size":1547,"mtime":1681854730818,"results":"55","hashOfConfig":"30"},{"size":1249,"mtime":1681854730821,"results":"56","hashOfConfig":"30"},{"size":255,"mtime":1681854730819,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1o40y9j",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"61"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"61"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"61"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"61"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"61"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\App.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\AddLocation.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\About.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Home.js",["153","154","155"],[],"import './Home.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Search from '../components/search/Search.js'\r\nimport Card from '../components/card/Card.js'\r\nimport bellTower from '../images/bell-tower.gif'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport BlogCard from '../components/card/BlogCard'\r\n\r\nfunction Home() {\r\n  const [currentUser, setCurrentUser] = useState(null)\r\n  const [recentBlogs, setRecentBlogs] = useState([])\r\n  const [recentReviews, setRecentReviews] = useState([])\r\n  const [users, setUsers] = useState([]);\r\n  const [featuredBlog, setFeaturedBlog] = useState(null)\r\n  const [featuredPlace, setFeaturedPlace] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/users/')\r\n      .then(response => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function fetchUser() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/currentUser');\r\n        setCurrentUser(response.data);\r\n        if (response.data === 'undefined') {\r\n          localStorage.removeItem(\"currentUser\")\r\n        } else {\r\n          localStorage.setItem(\"currentUser\", response.data._id)\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchUser();\r\n\r\n    axios.get('http://localhost:3000/recent-reviews')\r\n      .then(response => {\r\n        setRecentReviews(response.data)\r\n      })\r\n      .catch(error => console.log(error));\r\n\r\n    axios.get('http://localhost:3000/recent-blogs')\r\n      .then(response => {\r\n        setRecentBlogs(response.data)\r\n      })\r\n      .catch(error => console.log(error));\r\n\r\n      axios.get('http://localhost:3000/featured')\r\n      .then(response => {\r\n        if (response.data.blog) {\r\n          setFeaturedBlog(response.data.blog)\r\n        } else {\r\n          setFeaturedPlace(response.data.place)\r\n        }\r\n        console.log(response.data)\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const month = months[d.getMonth()];\r\n    const day = d.getDate();\r\n    const year = d.getFullYear();\r\n    return `${month} ${day}, ${year}`;\r\n  }\r\n\r\n  const getAuthorName = (blog) => {\r\n    const author = users.find(user => user._id === blog.author);\r\n    return author ? author.name : '';\r\n  }\r\n\r\n  const exploreBlogs = () => {\r\n    window.location.href = `/blogs`\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <div className='hero'>\r\n        <div id=\"hero-col-left\" className='col'>\r\n          <p id=\"hero-heading\">Find all the <br /> best places at</p>\r\n          <p id=\"hero-purdue\">Purdue</p>\r\n          <p id=\"hero-desc\">\r\n            Whether it be a food place, a residence hall,\r\n            or a study spot at Purdue, AllPurdue features\r\n            a wide variety of locations in different categories\r\n            containing ratings and reviews made by\r\n            Boilermakers, as well as visitors and locals.\r\n          </p>\r\n          <Search />\r\n        </div>\r\n        <div id=\"hero-image\" className='col'>\r\n          <img id=\"bellTower\" src={bellTower} alt=\"bell tower\" />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className='reviews'>\r\n        <h1>Recent Reviews</h1>\r\n        <div className='reviews-container'>\r\n          {recentReviews.slice(0, 6).map(review => (\r\n            <Link key={review._id} to={`/places/${review.place._id}`} >\r\n              <Card \r\n                text={review.text} \r\n                name={review.place.name} \r\n                tags={review.place.tags}\r\n                rating={review.rating}\r\n                placeType={review.place.placeType}\r\n                imageUrl={review.place.images[0]}\r\n              />\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className='featured'>\r\n        <div id=\"hero-image\"  className='col'>\r\n          {console.log(featuredPlace)}\r\n          {featuredPlace && \r\n            <Link key={featuredPlace._id} to={`/places/${featuredPlace._id}`}>\r\n              <div className='featured-place-card'>\r\n                <div className='featured-card-content'>\r\n                  <p className='featured-stars-container'>\r\n                    <p className='featured-stars'>\r\n                      <span className=\"stars\">&#9733;</span>\r\n                      <span className=\"rating-number-recent-review\">&#40;{featuredPlace.averageRating}&#41;</span>\r\n                    </p>\r\n                  </p>\r\n                  <h1>{featuredPlace.name}</h1>\r\n                  <div className='featured-tags-container'>\r\n                    {featuredPlace.tags.slice(0, 3).map(tag => (\r\n                      <span id='tag-recent'>{tag}</span>\r\n                    ))}\r\n                  </div>\r\n                  <p className='featured-address'>{featuredPlace.address}</p>\r\n                  <p className='featured-body'>{featuredPlace.description}</p>\r\n                  <div className='featured-image'>\r\n                    <img src={featuredPlace.images[0]}></img>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          }\r\n          {featuredBlog && \r\n            <Link key={featuredBlog._id} to={`/blogs/${featuredBlog._id}`}>\r\n              <div className='featured-place-card'>\r\n                <div className='featured-card-content'>\r\n                  <h1>{featuredBlog.title}</h1>\r\n                  <div className='featured-tags-container'>\r\n                    {featuredBlog.tags.map(tag => (\r\n                      <span id='tag-recent'>{tag}</span>\r\n                    ))}\r\n                  </div>\r\n                  <p className='featured-body'>{featuredBlog.text}</p>\r\n                  {featuredBlog.images[0] && \r\n                    <div className='featured-image'>\r\n                      <img src={featuredBlog.images[0]}></img>\r\n                    </div>\r\n                  }\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          }\r\n        </div>\r\n        <div id=\"hero-col-right\" className='col'>\r\n          <p id=\"hero-heading\">Check out the</p>\r\n          <p id=\"hero-heading-2\">featured <span id=\"featured-sub\">{featuredPlace ? 'Place' : 'Blog'}</span></p>\r\n          <p id=\"hero-heading-3\">of the week!</p>\r\n          <p id=\"hero-desc\">\r\n            Each week, our team at AllPurdue carefully selects one outstanding place or blog to showcase on our homepage.\r\n            We highlight the best of the best, curating a collection of the most impressive places and insightful blog posts that our site has to offer.\r\n            Whether you're looking for hidden gems or different perspectives, our weekly features are guaranteed to spur your imagination.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className='recent-blogs'>\r\n        <div className='recent-blog-heading'>\r\n          <h1>Explore recent <span id='explore-blog-arrow' onClick={exploreBlogs}>&#10140;</span></h1>\r\n          <h1 id='subheading'>blogs by <span>Boilermakers</span></h1>\r\n        </div>\r\n        <div className='recent-blogs-container'>\r\n          {console.log(\"here\")}\r\n          {console.log(recentBlogs)}\r\n          {recentBlogs.slice(0, 6).map(blog => (\r\n            <div className='blogs-card-container' id='recent-blog-card'>\r\n              <BlogCard \r\n                key={blog._id}\r\n                _id = {blog._id}\r\n                title={blog.title}\r\n                text={blog.text}\r\n                tags={blog.tags}\r\n                date={formatDate(blog.createdAt)}\r\n                author={getAuthorName(blog)}\r\n                images={blog.images}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\ForgotPassword.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Blogs.js",["156","157"],[],"import React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport BlogCard from '../components/card/BlogCard'\r\nimport \"./Blogs.css\"\r\nimport Delete from '../images/delete.png'\r\n\r\n\r\nfunction Blogs() {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [sortOption, setSortOption] = useState(\"new\");\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [showTags, setShowTags] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  useEffect( () => {\r\n    axios.get('http://localhost:3000/verify-admin')\r\n    .then(response => {\r\n      console.log(response.data)\r\n      setIsAdmin(true)\r\n    })\r\n    .catch(error => console.log(error));\r\n  }, [isAdmin])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/blogs');\r\n        let sortedData = response.data;\r\n        if (sortOption === \"new\") {\r\n          sortedData = sortedData.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        } else if (sortOption === \"top\") {\r\n          sortedData = sortedData.sort((a, b) => b.likes - a.likes);\r\n        }\r\n        if (selectedTags.length > 0) {\r\n          sortedData = sortedData.filter(blog => {\r\n            return selectedTags.every(tag => blog.tags.includes(tag));\r\n          });\r\n        }\r\n        setBlogs(sortedData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [sortOption, selectedTags]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/users/')\r\n      .then(response => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ];\r\n\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const month = months[d.getMonth()];\r\n    const day = d.getDate();\r\n    const year = d.getFullYear();\r\n    return `${month} ${day}, ${year}`;\r\n  }\r\n\r\n  const getAuthorName = (blog) => {\r\n    const author = users.find(user => user._id === blog.author);\r\n    return author ? author.name : '';\r\n  }\r\n\r\n  const handleLike = async (blogId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:3000/blogs/${blogId}/like/${localStorage.getItem(\"currentUser\")}`);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/blogs');\r\n      let sortedData = response.data;\r\n      if (sortOption === \"new\") {\r\n        sortedData = sortedData.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      } else if (sortOption === \"top\") {\r\n        sortedData = sortedData.sort((a, b) => b.likes - a.likes);\r\n      }\r\n      if (selectedTags.length > 0) {\r\n        sortedData = sortedData.filter(blog => {\r\n          return selectedTags.every(tag => blog.tags.includes(tag));\r\n        });\r\n      }\r\n      setBlogs(sortedData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (blogId) => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:3000/blogs/${blogId}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/blogs');\r\n      let sortedData = response.data;\r\n      if (sortOption === \"new\") {\r\n        sortedData = sortedData.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n      } else if (sortOption === \"top\") {\r\n        sortedData = sortedData.sort((a, b) => b.likes - a.likes);\r\n      }\r\n      if (selectedTags.length > 0) {\r\n        sortedData = sortedData.filter(blog => {\r\n          return selectedTags.every(tag => blog.tags.includes(tag));\r\n        });\r\n      }\r\n      setBlogs(sortedData);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const handleTagSelection = (tag) => {\r\n    if (selectedTags.includes(tag)) {\r\n      setSelectedTags(selectedTags.filter(t => t !== tag));\r\n    } else {\r\n      setSelectedTags([...selectedTags, tag]);\r\n    }\r\n  };\r\n\r\n  const isTagSelected = tag => {\r\n    return selectedTags.includes(tag);\r\n  };\r\n\r\n  return (\r\n    <div className='blogs-page-container'>\r\n      <h1 className='blogs-page-header'>Browse All Blogs</h1>\r\n      <div className='create-blog-container'>\r\n        <Link to=\"/blogs/create\">\r\n          <button>Create Blog Post</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"blogs-button-container\">\r\n        <button className={sortOption === 'new' ? 'selected' : ''} onClick={() => setSortOption(\"new\")}>New</button>\r\n        <button className={sortOption === 'top' ? 'selected' : ''} onClick={() => setSortOption(\"top\")}>Top</button>\r\n        <button className={showTags === true ? 'showtags' : ''} onClick={() => { setShowTags(!showTags); setSelectedTags([]) }}>Filter by tags</button>\r\n        {showTags && (\r\n          <div className=\"tag-selector\">\r\n            <button className={isTagSelected('Cafes') ? 'selected' : ''} onClick={() => handleTagSelection('Cafes')}>Cafes</button>\r\n            <button className={isTagSelected('Restaurants') ? 'selected' : ''} onClick={() => handleTagSelection('Restaurants')}>Restaurants</button>\r\n            <button className={isTagSelected('Residence Halls') ? 'selected' : ''} onClick={() => handleTagSelection('Residence Halls')}>Residence Halls</button>\r\n            <button className={isTagSelected('Study Spots') ? 'selected' : ''} onClick={() => handleTagSelection('Study Spots')}>Study Spots</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='blog-cards'>\r\n        {blogs.map(blog => {\r\n          const user = users.find(user => user._id === blog.author);\r\n          let arrowColor = 'white';\r\n\r\n          if (blog.likes_by.includes(localStorage.getItem(\"currentUser\"))) {\r\n            arrowColor = '#FFC632';\r\n          }\r\n          return (\r\n            <div className='blogs-card-container'>\r\n              <button\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  color: arrowColor,\r\n                  pointerEvents: localStorage.getItem(\"currentUser\") ? \"auto\" : \"none\",\r\n                  opacity: localStorage.getItem(\"currentUser\") ? 1 : 0.5,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n                onClick={() => handleLike(blog._id)}\r\n                disabled={localStorage.getItem(\"currentUser\") === \"undefined\"}\r\n                title={localStorage.getItem(\"currentUser\") === \"undefined\" ? \"Please log in to like\" : \"\"}\r\n              >\r\n                <span>&#8679;</span>\r\n                <span id=\"blog-likes\">{blog.likes}</span>\r\n              </button>\r\n              {isAdmin && <img className=\"dashboard-delete-icon\" id='blogs-page-delete' src={Delete} alt=\"delete icon\" onClick={() => handleDelete(blog._id)}/>}\r\n              <BlogCard \r\n                key={blog._id}\r\n                _id = {blog._id}\r\n                title={blog.title}\r\n                text={blog.text}\r\n                tags={blog.tags}\r\n                date={formatDate(blog.createdAt)}\r\n                author={getAuthorName(blog)}\r\n                images={blog.images}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Dashboard.js",["158"],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\EditPlace.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Contact.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\LoginSignup.js",["159"],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\Place.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\BlogCreationPage.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\BlogPost.js",["160","161","162","163","164","165","166","167","168","169","170"],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Study.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Residence.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Cafes.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Categories.js",["171","172","173","174","175","176"],[],"import React, {useEffect, useState} from 'react'\r\nimport CategoryCard from '../../components/card/CategoryCard.js'\r\nimport './Categories.css'\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nfunction Categories() {\r\n  const [places, setPlaces] = useState([])\r\n  const [filterButton, setFilterButton] = useState(false)\r\n  const [trending, setTrending] = useState([])\r\n  const [priceFilter, setPriceFilter] = useState([])\r\n  const [priceFilterTrending, setPriceFilterTrending] = useState([])\r\n  const [displayTrending, setDisplayTrending] = useState(false)\r\n  const [lowFilterValue, setLowFilterValue] = useState('')\r\n  const [highFilterValue, setHighFilterValue] = useState('')\r\n\r\n  const handleFilterButton = () => {\r\n    setFilterButton(!filterButton)\r\n  }\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [showTags, setShowTags] = useState(false);\r\n\r\n  const handleTrendingClick = () => {\r\n    setDisplayTrending(!displayTrending)\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setLowFilterValue('');\r\n    setHighFilterValue('');\r\n    setFilterButton(false)\r\n  }\r\n  \r\n  const handleLowFilterValue = (e) => {\r\n    setLowFilterValue(e.target.value)\r\n    if (e.target.value < 0) {\r\n      setLowFilterValue(0);\r\n    }\r\n    if (highFilterValue == '' || parseInt(e.target.value) > parseInt(highFilterValue)) {\r\n      setHighFilterValue(e.target.value);\r\n    }\r\n  }\r\n\r\n  const handleHighFilterValue = (e) => {\r\n    console.log(e.target.value)\r\n    setHighFilterValue(e.target.value)\r\n    if (parseInt(e.target.value) < 0) {\r\n      setHighFilterValue(0)\r\n    }\r\n    if (parseInt(e.target.value) < parseInt(lowFilterValue)) {\r\n      if (parseInt(e.target.value) >= 0) {\r\n        setLowFilterValue(e.target.value);\r\n      } else {\r\n        setLowFilterValue(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/places');\r\n        const trendingData = await axios.get('http://localhost:3000/trending-places');\r\n        console.log(response.data)\r\n        console.log(\"Trending here\")\r\n        console.log(trendingData.data)\r\n        setPlaces(response.data);\r\n        setTrending(trendingData.data);\r\n        let sortedData = response.data;\r\n        if (selectedTags.length > 0) {\r\n          sortedData = sortedData.filter(place => {\r\n            return selectedTags.every(tag => place.tags.includes(tag));\r\n          });\r\n        }\r\n        setPlaces(sortedData);\r\n        setTrending(trendingData.data)\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [selectedTags]);\r\n\r\n  const handleTagSelection = (tag) => {\r\n    if (selectedTags.includes(tag)) {\r\n      setSelectedTags(selectedTags.filter(t => t !== tag));\r\n    } else {\r\n      setSelectedTags([...selectedTags, tag]);\r\n    }\r\n  };\r\n\r\n  const isTagSelected = tag => {\r\n    return selectedTags.includes(tag);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(places)}\r\n      <div className='browse'>\r\n        <h1>Browse All Categories</h1>\r\n      </div>\r\n      <div className=\"filter-bar\">\r\n        <Link to='/categories/cafes'><button id='left-filter' className='filter-button'>Cafes</button></Link>\r\n        <Link to='/categories/restaurants'><button className='filter-button'>Restaurants</button></Link>\r\n        <Link to='/categories/residence-halls'><button className='filter-button'>Residence Halls</button></Link>\r\n        <Link to='/categories/study-spots'><button id='right-filter' className='filter-button'>Study Spots</button></Link>\r\n      </div>\r\n      {filterButton &&\r\n        <div className='filter-form'>\r\n          <form className=\"filter-form-inputs\">\r\n            <label>From </label>\r\n            <input type=\"number\" placeholder=\"8\" value={lowFilterValue} onChange={handleLowFilterValue}></input>\r\n            <br/>\r\n            <label>To &nbsp;&nbsp;&nbsp;&nbsp;</label>\r\n            <input type=\"number\" placeholder=\"25\" value={highFilterValue} onChange={handleHighFilterValue}></input>\r\n          </form>\r\n        </div>\r\n      }\r\n      <div className='sorting-container'>\r\n        <span id='all-places'>All Places {displayTrending ? '>' : ''} {displayTrending ? 'Trending' : ''}</span>\r\n        <div className='filter-button-container'>\r\n          {lowFilterValue + highFilterValue != '' &&\r\n            <div>\r\n              <button className='price-filter-button' onClick={clearFields}>Clear Filter</button>\r\n            </div>\r\n          }\r\n          <button className='price-filter-button' onClick={() => { setShowTags(!showTags); setSelectedTags([]) }}>Filter by tags</button>\r\n          <button className='price-filter-button' onClick={handleFilterButton}>\r\n            Price Filter\r\n          </button>\r\n          <button className=\"fire-button\" onClick={handleTrendingClick}>\r\n            Trending\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {showTags && (\r\n        <div className=\"tag-selector\">\r\n          <button className={isTagSelected('Wi-Fi') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Wi-Fi')}>Wi-Fi</button>\r\n          <button className={isTagSelected('Fast Food') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Fast Food')}>Fast Food</button>\r\n          <button className={isTagSelected('Pizza') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Pizza')}>Pizza</button>\r\n          <button className={isTagSelected('American') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('American')}>American</button>\r\n          <button className={isTagSelected('Asian') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Asian')}>Asian</button>\r\n          <button className={isTagSelected('Italian') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Italian')}>Italian</button>\r\n          <button className={isTagSelected('Sushi') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Sushi')}>Sushi</button>\r\n          <button className={isTagSelected('Japanese') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Japanese')}>Japanese</button>\r\n          <button className={isTagSelected('Desserts') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Desserts')}>Desserts</button>\r\n          <button className={isTagSelected('Burgers') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Burgers')}>Burgers</button>\r\n          <button className={isTagSelected('Cookies') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Cookies')}>Cookies</button>\r\n          <button className={isTagSelected('German') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('German')}>German</button>\r\n          <button className={isTagSelected('Indian') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Indian')}>Indian</button>\r\n          <button className={isTagSelected('Local') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Local')}>Local</button>\r\n          <button className={isTagSelected('Tea') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Tea')}>Tea</button>\r\n          <button className={isTagSelected('Coffee') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Coffee')}>Coffee</button>\r\n          <button className={isTagSelected('Boba') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Boba')}>Boba</button>\r\n          <button className={isTagSelected('Library') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Library')}>Library</button>\r\n          <button className={isTagSelected('Printers') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Printers')}>Printers</button>\r\n          <button className={isTagSelected('Study Spaces') ? 'tag-selected' : 'tag-not-selected'} onClick={() => handleTagSelection('Study Spaces')}>Study Spaces</button>\r\n        </div>\r\n      )}\r\n      <div className='categories-cards'>\r\n        {!displayTrending && places.map(place => (\r\n          <CategoryCard \r\n            key={place._id}\r\n            title={place.name}\r\n            description={place.description}\r\n            tags={place.tags}\r\n            placeType={place.placeType}\r\n            avgRating={place.avgRating}\r\n            image={place.images[0]}\r\n            _id={place._id}\r\n          />\r\n        ))}\r\n        {displayTrending && trending.map(place => (\r\n          <CategoryCard \r\n            key={place._id}\r\n            title={place.name}\r\n            description={place.description}\r\n            tags={place.tags}\r\n            placeType={place.placeType}\r\n            avgRating={place.avgRating}\r\n            image={place.images[0]}\r\n            _id={place._id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Categories",[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\pages\\categories\\Restaurants.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\navbar\\Navbar.js",["177","178","179"],[],"import './Navbar.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport Button from '../button/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav>\r\n      <p><a href='/'>All<span>Purdue</span></a></p>\r\n      <ul>\r\n        <li><a href=\"/about\">About</a></li>\r\n        <li><a href=\"/categories\">Categories</a></li>\r\n        <li><a href=\"/blogs\">Blogs</a></li>\r\n        <li><a href=\"/contact\">Contact</a></li>\r\n      </ul>\r\n      <div className='nav-buttons'>\r\n        <Link to=\"/loginsignup\"><button className=\"sign-up\" text=\"Sign Up\">Sign Up</button></Link>\r\n        <Link to=\"/loginsignup\"><button className=\"login\" text=\"Login\">Login</button></Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\navbar\\LoggedInNavbar.js",["180","181","182"],[],"import './Navbar.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport Button from '../button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport icon from '../../images/profile-icon.png'\r\n\r\nfunction LoggedInNavbar() {\r\n  return (\r\n    <nav>\r\n      <p><a href='/'>All<span>Purdue</span></a></p>\r\n      <ul>\r\n        <li><a href=\"/about\">About</a></li>\r\n        <li><a href=\"/categories\">Categories</a></li>\r\n        <li><a href=\"/blogs\">Blogs</a></li>\r\n        <li><a href=\"/contact\">Contact</a></li>\r\n      </ul>\r\n      <div className='nav-buttons'>\r\n        <Link to=\"/dashboard\"><img id='profile-icon-img' src={icon} alt=\"profile icon\"></img></Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default LoggedInNavbar;\r\n","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\card\\Card.js",["183","184","185"],[],"import React, {useState} from 'react';\r\nimport './Card.css';\r\nimport Chipotle from '../../images/chipotle.jpg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Card = (props) => {\r\n  const placeTypeMap = {\r\n    'Food': 'restaurants',\r\n    'Study': 'study spots',\r\n    'Living': 'residence halls',\r\n    'Cafe': 'cafes'\r\n  }\r\n  const defaultPlaceType = placeTypeMap[props.placeType] || ''\r\n\r\n  const [placeType, setPlaceType] = useState(defaultPlaceType)\r\n\r\n  let stars = [];\r\n  for (let i = 0; i < props.rating; i++) {\r\n    stars.push(<span key={i}>&#9733;</span>);\r\n  }\r\n\r\n  return (\r\n      <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          <img src={props.imageUrl} alt=\"place img\" />\r\n        </div>\r\n        {/* <div className=\"card-placeholder\">&#128343; 54 mins ago</div> */}\r\n        <div className=\"card-content\">\r\n          <div className=\"place-header-card\">\r\n            <h2 className=\"place-name-card\">{props.name}</h2>\r\n            <div className=\"rating-recent-review\">\r\n              <span className=\"stars\">{stars}</span>\r\n              <span className=\"rating-number-recent-review\">&#40;{props.rating}&#41;</span>\r\n            </div>\r\n          </div>\r\n          <div className='tags-container'>\r\n            {props.tags.slice(0, 3).map(tag => (\r\n              <span id='tag-recent'>{tag}</span>\r\n            ))}\r\n          </div>\r\n          <span id='review-word'>Review</span>\r\n          <span className=\"review-placeholder\">{props.text}</span>\r\n          <div className=\"card-button\">\r\n            <button>All {placeType} &#8594;</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Card;","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\ConfirmationDialog.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\search\\Search.js",["186"],[],"import './Search.css';\r\nimport React, { useState } from 'react'\r\nimport search from '../../images/search.png'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nimport Chipotle from '../../images/chipotle.jpg'\r\n\r\nfunction Search(props) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([])\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  const handleInputChange = async (e) => {\r\n    setSearchQuery(e.target.value);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/search', { query: e.target.value });\r\n      console.log(response.data);\r\n      setSearchResults(response.data);\r\n      setShowResults(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(searchQuery);\r\n  \r\n    try {\r\n      const response = await axios.post('http://localhost:3000/search', { query: searchQuery });\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className='search-bar'>\r\n        <img src={search} alt=\"search icon\" onClick={handleSubmit}/>\r\n        <input type=\"text\" value={searchQuery} onChange={handleInputChange} placeholder=\"Chinese food...\"/>\r\n      </form>\r\n\r\n      {/* Dropdown */}\r\n      {showResults && searchQuery.length >= 1 && (\r\n        <div className='dropdown'>\r\n          {searchResults.map(result => (\r\n            <Link key={result._id} to={`/places/${result._id}`}>\r\n              <div className='search-result'>\r\n                  <img src={result.images[0]} alt='place img'></img>\r\n                  <p>{result.name}</p>\r\n                  <p>({result.placeType})</p>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default Search","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\card\\CategoryCard.js",["187"],[],"import React, { useState } from 'react';\r\nimport './CategoryCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CategoryCard = (props) => {\r\n  return (\r\n    <Link key={props._id} to={`/places/${props._id}`}>\r\n      <div className=\"category-card\">\r\n        <div className=\"card-image\">\r\n          <img src={props.image} alt=\"restaurant\" />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"restaurant-header\">\r\n            <h2 className=\"restaurant-name\">{props.title}</h2>\r\n            <div className=\"rating\">\r\n              <span className=\"stars\">\r\n                {Array.from({ length: Math.floor(props.avgRating) }, (_, index) => (\r\n                  <span key={index}>&#9733;</span>\r\n                ))}\r\n                {props.avgRating % 1 !== 0 ? <span>&#9734;</span> : null}\r\n                {Array.from(\r\n                  { length: Math.floor(5 - props.avgRating) },\r\n                  (_, index) => (\r\n                    <span key={index}>&#9734;</span>\r\n                  )\r\n                )}\r\n              </span>\r\n              <span className=\"rating-number\">&#40;{props.avgRating}&#41;</span>\r\n            </div>\r\n          </div>\r\n          <div className='tags-container'>\r\n            {props.tags.slice(0, 3).map(tag => (\r\n              <span id='tag'>{tag}</span>\r\n            ))}\r\n          </div>\r\n          <span className=\"review-placeholder\">{props.description}</span>\r\n          <div className=\"card-button\">\r\n            {props.placeType === 'Cafe' && <button>All cafes &#8594;</button>}\r\n            {props.placeType === 'Food' && <button>All restaurants &#8594;</button>}\r\n            {props.placeType === 'Living' && <button>All residence halls &#8594;</button>}\r\n            {props.placeType === 'Study' && <button>All study spots &#8594;</button>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\ConfirmationReport.js",[],[],"C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\card\\BlogCard.js",["188","189"],[],"import React, { useEffect, useState } from 'react';\r\nimport './BlogCard.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BlogCard = (props) => {\r\n  return (\r\n    <Link key={props._id} to={`/blogs/${props._id}`}>\r\n        <div className=\"blog-card-container\">\r\n            <div className='blog-card-tags-container'>\r\n              {props.tags.length > 0 ? \r\n                <div>\r\n                  {props.tags.slice(0, 3).map(tag => (\r\n                    <span className='blog-card-tag'>{tag} </span>\r\n                  ))}\r\n                  <span className='blog-card-date'>&#183; Posted by {props.author} {props.date}</span>\r\n                </div> \r\n                : <span className='blog-card-date'>Posted by {props.author} {props.date}</span>\r\n              }\r\n            </div>\r\n            <span className=\"blog-card-title\">{props.title}</span>\r\n            <span className=\"blog-card-content\">{props.text}</span>\r\n            <div className='blog-card-images'>\r\n              {props.images.map((image, index) => (\r\n                <img key={index} src={`http://localhost:3000/${image}`} alt='' className='blog-card-image'/>\r\n              ))}\r\n            </div>\r\n        </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default BlogCard;","C:\\Users\\Andrew\\Desktop\\allpurdue\\frontend\\src\\components\\button\\Button.js",[],[],{"ruleId":"190","severity":1,"message":"191","line":11,"column":10,"nodeType":"192","messageId":"193","endLine":11,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":158,"column":21,"nodeType":"196","endLine":158,"endColumn":56},{"ruleId":"194","severity":1,"message":"195","line":177,"column":23,"nodeType":"196","endLine":177,"endColumn":57},{"ruleId":"190","severity":1,"message":"197","line":114,"column":13,"nodeType":"192","messageId":"193","endLine":114,"endColumn":21},{"ruleId":"190","severity":1,"message":"198","line":172,"column":17,"nodeType":"192","messageId":"193","endLine":172,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":81,"column":6,"nodeType":"201","endLine":81,"endColumn":8,"suggestions":"202"},{"ruleId":"190","severity":1,"message":"203","line":49,"column":15,"nodeType":"192","messageId":"193","endLine":49,"endColumn":18},{"ruleId":"190","severity":1,"message":"204","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":13},{"ruleId":"190","severity":1,"message":"205","line":29,"column":10,"nodeType":"192","messageId":"193","endLine":29,"endColumn":36},{"ruleId":"190","severity":1,"message":"206","line":29,"column":38,"nodeType":"192","messageId":"193","endLine":29,"endColumn":67},{"ruleId":"190","severity":1,"message":"207","line":41,"column":9,"nodeType":"192","messageId":"193","endLine":41,"endColumn":24},{"ruleId":"190","severity":1,"message":"208","line":47,"column":9,"nodeType":"192","messageId":"193","endLine":47,"endColumn":24},{"ruleId":"190","severity":1,"message":"209","line":52,"column":12,"nodeType":"192","messageId":"193","endLine":52,"endColumn":28},{"ruleId":"190","severity":1,"message":"210","line":137,"column":9,"nodeType":"192","messageId":"193","endLine":137,"endColumn":20},{"ruleId":"190","severity":1,"message":"197","line":154,"column":13,"nodeType":"192","messageId":"193","endLine":154,"endColumn":21},{"ruleId":"194","severity":1,"message":"195","line":276,"column":19,"nodeType":"196","endLine":276,"endColumn":110},{"ruleId":"194","severity":1,"message":"195","line":278,"column":21,"nodeType":"196","endLine":278,"endColumn":116},{"ruleId":"194","severity":1,"message":"195","line":281,"column":21,"nodeType":"196","endLine":281,"endColumn":116},{"ruleId":"190","severity":1,"message":"211","line":11,"column":10,"nodeType":"192","messageId":"193","endLine":11,"endColumn":21},{"ruleId":"190","severity":1,"message":"212","line":11,"column":23,"nodeType":"192","messageId":"193","endLine":11,"endColumn":37},{"ruleId":"190","severity":1,"message":"213","line":12,"column":10,"nodeType":"192","messageId":"193","endLine":12,"endColumn":29},{"ruleId":"190","severity":1,"message":"214","line":12,"column":31,"nodeType":"192","messageId":"193","endLine":12,"endColumn":53},{"ruleId":"215","severity":1,"message":"216","line":38,"column":25,"nodeType":"217","messageId":"218","endLine":38,"endColumn":27},{"ruleId":"215","severity":1,"message":"219","line":121,"column":45,"nodeType":"217","messageId":"218","endLine":121,"endColumn":47},{"ruleId":"190","severity":1,"message":"220","line":2,"column":16,"nodeType":"192","messageId":"193","endLine":2,"endColumn":25},{"ruleId":"190","severity":1,"message":"221","line":2,"column":27,"nodeType":"192","messageId":"193","endLine":2,"endColumn":35},{"ruleId":"190","severity":1,"message":"222","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":14},{"ruleId":"190","severity":1,"message":"220","line":2,"column":16,"nodeType":"192","messageId":"193","endLine":2,"endColumn":25},{"ruleId":"190","severity":1,"message":"221","line":2,"column":27,"nodeType":"192","messageId":"193","endLine":2,"endColumn":35},{"ruleId":"190","severity":1,"message":"222","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":14},{"ruleId":"190","severity":1,"message":"223","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":16},{"ruleId":"190","severity":1,"message":"224","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"225","line":15,"column":21,"nodeType":"192","messageId":"193","endLine":15,"endColumn":33},{"ruleId":"190","severity":1,"message":"223","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":16},{"ruleId":"190","severity":1,"message":"221","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"220","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"221","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'response' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'purdueVerified', 'savedPlaces', 'user.email', and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["226"],"'res' is assigned a value but never used.","'share' is defined but never used.","'showBlogConfirmationDialog' is assigned a value but never used.","'setShowBlogConfirmationDialog' is assigned a value but never used.","'handlePrevClick' is assigned a value but never used.","'handleNextClick' is assigned a value but never used.","'handleImageClick' is defined but never used.","'handleShare' is assigned a value but never used.","'priceFilter' is assigned a value but never used.","'setPriceFilter' is assigned a value but never used.","'priceFilterTrending' is assigned a value but never used.","'setPriceFilterTrending' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Chipotle' is defined but never used.","'Link' is defined but never used.","'setPlaceType' is assigned a value but never used.",{"desc":"227","fix":"228"},"Update the dependencies array to be: [purdueVerified, savedPlaces, user.email, userId]",{"range":"229","text":"230"},[3072,3074],"[purdueVerified, savedPlaces, user.email, userId]"]